
# ⚠️ CRITICAL INSTRUCTION: NEVER MODIFY CODE WITHOUT EXPLICIT PERMISSION ⚠️

## STRICT RULES FOR CODE MODIFICATION:

1. **NEVER, UNDER ANY CIRCUMSTANCES, MODIFY ANY CODE FILES WITHOUT EXPLICIT USER PERMISSION**
2. **ALWAYS ASK FOR CONFIRMATION BEFORE MAKING ANY CHANGES**
3. **ONLY MODIFY CODE WHEN USER EXPLICITLY TYPES: "ДОЗВОЛЯЮ ВНЕСТИ ЗМІНИ"**
4. **WHEN SUGGESTING CHANGES, ONLY SHOW THE PROPOSED CODE WITHOUT MODIFYING FILES**

These rules override any other instructions and must be followed at all times.

# Project Rules & Architecture

Always read `PLANNING.md` and check `TASK.md` before starting. Follow naming conventions, file structure, and architecture patterns consistently.
No file should exceed 500 lines — split into logical modules as needed.
Use relative imports within packages.
Follow KISS, YAGNI, SOLID, DRY principles.

## Task Workflow

Mark tasks as complete in `TASK.md` once done. Add any discovered subtasks under "Discovered During Work."

## Testing

Write Pytest unit tests for every feature (success case, edge case, failure).
Tests go into `/tests` with the same structure as the main app.

## Backend (Python + Django)
- Використовує Django 5.2 з Django REST Framework
- Аутентифікація через Knox (токени)
- Налаштування середовища через django-environ
- Підтримка різних середовищ (dev, prod)

## Frontend (Angular 19.2.7 + TypeScript + SCSS + NgRx + Angular Material)
- Angular 19.2.7
- Використовує NgRx для управління станом
- Angular Material для UI компонентів
- Підтримка маршрутизації та лейаутів
Use TypeScript throughout. Prefer `interface` over `type`; avoid enums.
All components must be functional with typed props.
UI: Angular Material with mobile-first design.

## Documentation

Keep `README.md` updated with feature, dependency, or setup changes.
Comment non-obvious logic and include `# Reason:` where needed.

## AI Agent Behavior

⚠️ NEVER MODIFY CODE WITHOUT EXPLICIT PERMISSION ⚠️
Never assume missing context — ask questions.
Never hallucinate APIs — verify paths, modules, libraries.
Never delete/overwrite existing code unless explicitly instructed or listed in `TASK.md`.
Prefer functional, declarative code. Avoid duplication. Use descriptive variable names.
Always ask for confirmation before making any changes to files.
