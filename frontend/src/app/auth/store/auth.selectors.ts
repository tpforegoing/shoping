import { createFeature } from '@ngrx/store';
import { createSelector } from '@ngrx/store';
import { AuthState, authReducer, authFeatureKey } from './auth.reducer';
import { CLIENT } from '../../store/store.model';


export const authFeature = createFeature<'auth', AuthState>({
  name: authFeatureKey,
  reducer: authReducer,
});

// üîπ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ —Å–µ–ª–µ–∫—Ç–æ—Ä–∏
export const {
  selectAuthState,
  selectUser,
  selectError,
  selectIsAuthenticated,
  selectLoading,
} = authFeature;

// üîπ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ç–æ–∫–µ–Ω —â–µ –¥—ñ–π—Å–Ω–∏–π (—á–µ—Ä–µ–∑ getter —É –∫–ª–∞—Å—ñ User)
export const selectIsTokenValid = createSelector(
  selectUser,
  (user) => !!user?.token
);

// üîπ –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–æ–∫–µ–Ω –Ω–∞–ø—Ä—è–º—É (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–µ–Ω –¥–ª—è API-–∑–∞–ø–∏—Ç—É)
export const selectAuthToken = createSelector(
  selectUser,
  (user) => user?.token ?? null
);

// üîπ –û—Ç—Ä–∏–º–∞—Ç–∏ username
export const selectUsername = createSelector(
  selectUser,
  (user) => user?.username ?? null
);

export const selectAuthRole = createSelector(
  selectUser,
  (user) => user?.role ?? CLIENT  // –∞–±–æ null —è–∫—â–æ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
);