version: "3.9"

services:
  db:
    image: postgres:17.5-alpine
    container_name: shoptest-db
    image: postgres:17.5-alpine
    container_name: shoptest-db
    restart: always
    env_file:
      - .env
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    networks:
      - shopnet
    # ports:
    #   - "5432:5432"  

  backend:
    build: 
      context: ./backend
    container_name: shoptest-backend
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    environment:
       DJANGO_SETTINGS_MODULE: shoping.settings.prod
    depends_on:
      db:
        condition: service_healthy
    networks:
      - shopnet
    ports:
      - "8000:8000"
    networks:
      - shopnet
    command: >
      sh -c "python manage.py makemigrations && 
             python manage.py migrate &&
             python manage.py generate_test_data &&
             gunicorn shoping.wsgi:application --bind 0.0.0.0:8000"

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: shoptest-frontend
    volumes:
      - ./frontend:/app
    command: sh - "npm ci && npm run prod"

    networks:
      - shopnet
    networks:
      - shopnet

  nginx:
    image: nginx:stable-alpine
    container_name: shoptest-nginx
    image: nginx:stable-alpine
    container_name: shoptest-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./frontend/dist/frontend/browser:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
      - backend
    networks:
      - shopnet

networks:
  shopnet:
    driver: bridge